<?xml version="1.0" encoding="UTF-8"?>

<project name="buildanalyzedebug">

  <!-- Include composerÂ´s autoload, since pear.phpunit.de was shut down on on December 31, 2014,
  this affects PHPUNIT, PHPCPD and PHPLOC.
  See https://github.com/sebastianbergmann/phpunit/wiki/End-of-Life-for-PEAR-Installation-Method-->
  <php expression="include('${user.home}/.composer/vendor/autoload.php')"/>

  <!-- ### Debug code detection

  Code should not call functions which are usually used for debugging.
  This belongs on developer environments - not VCS. This goes for mentioning
  them in comments as well. -->

  <target name="check-php-debug"
          description="Check custom PHP code for debug statements"
          depends="init, setup-check-debug-task"
          unless="debug.php.skip">
    <phingcall target="check-debug">
      <property name="debug.language" value="PHP" override="true" />
      <property name="debug.pattern" value="debug_backtrace\(|print_r\(|var_dump\(|dsm\(|dpm\(|dvm\(|dpr\(|dvr\(|kpr\(|dargs\(|dd\(|ddebug_backtrace\(|db_queryd\(|firep\(|dfb\("
                override="true" />
      <property name="debug.fileset" value="src.php.custom"/>
    </phingcall>
  </target>

  <target name="check-js-debug"
          description="Check custom Javascript code for debug statements"
          depends="init, setup-check-debug-task"
          unless="debug.js.skip">
    <phingcall target="check-debug">
      <property name="debug.language" value="Javascript" override="true" />
      <property name="debug.pattern" value="console\.log\(" override="true" />
      <property name="debug.fileset" value="src.js.custom"/>
    </phingcall>
  </target>

  <!-- #### Check a fileset for debug code -->
  <target name="check-debug"
          depends="init">
    <php function="strtolower" returnProperty="debug.language.lower">
      <param value="${debug.language}" />
    </php>
    <property name="debug.output.file"
              value="${project.logdir}/checkstyle-debug-${debug.language.lower}.txt.xml"
              override="true" />

    <foreach target="check-debug-file" param="filename"
             absparam="absfilename">
      <fileset refid="${debug.fileset}"/>
    </foreach>

    <if>
      <available file="${debug.output.file}"/>
      <then>
        <loadfile property="debug.lines" file="${debug.output.file}" />

        <!-- Break if it's configured to when debug code is detected -->
        <if>
          <and>
            <not>
              <equals arg1="${debug.lines}" arg2="" />
            </not>
            <istrue value="${checkdebug.break}"/>
          </and>
          <then>
            <fail message="Debug code detected. See file: ${debug.output.file}" />
          </then>
        </if>
      </then>
    </if>
  </target>

  <!-- #### Check an individual file for debug code

  No need to run `init` here. This target should only be called through parent
  `check-debug` target. -->
  <target name="check-debug-file">
    <echo>Checking file for debug statements: ${absfilename}</echo>
    <checkdebug inputFile="${absfilename}" outputFile="${debug.output.file}" pattern="${debug.pattern}" />
  </target>

  <!-- Setup the debug task -->
  <target name="setup-check-debug-task"
          depends="init"
          unless="debug.task.setup">

    <phingcall target="setup-git-repo">
      <property name="repo.dir" value="${project.toolsdir}/phing-check-debug-task"/>
      <property name="repo.url" value="${phing.checkdebug.repository.url}" />
      <property name="repo.revision" value="${phing.checkdebug.repository.revision}" />
    </phingcall>

    <taskdef name="checkdebug" classname="CheckDebugTask"
             classpath="${project.toolsdir}/phing-check-debug-task" />

    <property name="debug.task.setup" value="true" />

  </target>
</project>
